/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var sa = /* color: d63000 */ee.Geometry.Polygon(
        [[[-114.35840606689453, 36.50936020883701],
          [-114.312744140625, 36.51101588504133],
          [-114.30278778076172, 36.530881236848394],
          [-114.2856216430664, 36.57611104981327],
          [-114.26193237304688, 36.63178454835413],
          [-114.19086456298828, 36.70916449436405],
          [-114.16065216064453, 36.726227169488446],
          [-114.09198760986328, 36.75126390898229],
          [-114.0054702758789, 36.76446681118516],
          [-113.98967742919922, 36.7842669031316],
          [-113.95088195800781, 36.81533173455583],
          [-113.84307861328125, 36.88950640179281],
          [-113.75072479248047, 36.94467857206496],
          [-113.60584259033203, 36.98390610968992],
          [-113.3349609375, 37.09297839343963],
          [-113.13961029052734, 37.14252976929988],
          [-113.10012817382812, 37.199159258361455],
          [-113.1203842163086, 37.21146440031129],
          [-113.08639526367188, 37.2284148647984],
          [-113.0661392211914, 37.323758484417986],
          [-113.21033477783203, 37.2576591253159],
          [-113.24295043945312, 37.25383341872528],
          [-113.22921752929688, 37.29180860731068],
          [-113.19488525390625, 37.33112960486265],
          [-113.15540313720703, 37.38979975341983],
          [-113.19866180419922, 37.3928002484491],
          [-113.27281951904297, 37.26558318518389],
          [-113.31504821777344, 37.20982383064024],
          [-113.37100982666016, 37.200253129999126],
          [-113.39607238769531, 37.17317514850797],
          [-113.4170150756836, 37.15648590204551],
          [-113.45924377441406, 37.13951928536274],
          [-113.50421905517578, 37.1252862849668],
          [-113.55640411376953, 37.100645919949095],
          [-113.5989761352539, 37.07188869492415],
          [-113.61991882324219, 37.051889147763],
          [-113.65425109863281, 37.037913733226276],
          [-113.71158599853516, 37.01351910258053],
          [-113.72703552246094, 36.99240731548099],
          [-113.75862121582031, 36.973758265567504],
          [-113.829345703125, 36.954281585675965],
          [-113.89251708984375, 36.929036787414525],
          [-113.96530151367188, 36.88950640179281],
          [-114.03533935546875, 36.84116367417466],
          [-114.1204833984375, 36.820278951308744],
          [-114.20150756835938, 36.76309161490538],
          [-114.31411743164062, 36.69264861993992],
          [-114.34295654296875, 36.665114277517674],
          [-114.34295654296875, 36.61332303966068],
          [-114.35943603515625, 36.54053616262899]]]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
//Get time variables
var startDate = new Date('01/01/1990')
var endDate = new Date('12/31/2015')
var startJulian = 90
var endJulian = 273

//Get the bands right
var sensor_band_dict =ee.Dictionary({L8 : ee.List([1,2,3,4,5,9,6]),
                        L7 : ee.List([0,1,2,3,4,5,7]),
                        L5 : ee.List([0,1,2,3,4,5,6]),
                        L4 : ee.List([0,1,2,3,4,5,6])
  });
  
var bandNames = ee.List(['blue','green','red','nir','swir1','temp','swir2']);

//Mask out clouds and cloud shadows
//cloud busting function
var bust_clouds = function(image) {
  
  image = ee.Algorithms.Landsat.simpleCloudScore(image);
  var quality = image.select('cloud');
  var cloud01 = quality.gt(10);
  var maskedImage = image.mask().and(cloud01.not());
  image = image.mask(maskedImage);
  return image;
};

//modular TDOM
function simpleTDOM(collection,zShadowThresh,maskAllDarkPixels){
      var shadowSumBands = ['nir','swir1','swir2']
      var sSName = 'shadowSum'
      var startBandNames = ee.Image(collection.first()).bandNames();
      var collection = collection.map(function(img){
        var shadowSum = img.select(shadowSumBands).reduce(ee.Reducer.sum()).select([0],[sSName])
        return img.addBands(shadowSum);
      })
      
      if(maskAllDarkPixels === true){
        collection = collection.map(function(img){
          return img.mask(img.mask().and(img.select([sSName]).gt(200)))
        })
      }
      var shadowStd = collection.select(sSName).reduce(ee.Reducer.stdDev());
      var shadowMean = collection.select(sSName).mean();
     
      collection = collection.map(function(img){
        var tShadowSum = img.select(shadowSumBands).reduce(ee.Reducer.sum()).select([0],['shadowSumT']);
        var zScore = tShadowSum.subtract(shadowMean).divide(shadowStd).select([0],['zShadow']);
        var m = zScore.gt(zShadowThresh);
        return img.mask(img.mask().and(m)).select(startBandNames);
      })
      return collection;
    } 
//add Julian data band
var createTimeBand = function(image) 
{
  var d = ee.Date(image.get('system:time_start'));
  var year = d.get('year');
  var proportion = d.getFraction('year');
  var yearProportion = ee.Image(year.add(proportion)).float();
  return image.addBands(yearProportion.select([0],['year']))
 };
//add NDVI band
var NDVI = function(image)
{
  var index = image.normalizedDifference(['nir', 'red'])
  return image.addBands(index.select([0],['NDVI']))
}

//add NDWI band
var NDWI = function(image)
{
  var WI = image.normalizedDifference(['nir', 'swir1'])
  return image.addBands(WI.select([0],['NDWI']))
}

//add NDII7 band
var NDII7 = function(image)
{
  var II7 = image.normalizedDifference(['nir', 'swir2'])
  return image.addBands(II7.select([0],['NDII7']))
}

//Create L5 and L8 merged collection
var L5 = ee.ImageCollection('LT5_L1T_TOA')
        .filterDate(startDate,endDate)
        .filter(ee.Filter.calendarRange(startJulian,endJulian))
        .filterBounds(sa)
        .map(bust_clouds)
        .select(sensor_band_dict.get('L5'),bandNames)
        
var L7 = ee.ImageCollection('LE7_L1T_TOA')
        .filterDate(startDate,endDate)
        .filter(ee.Filter.calendarRange(startJulian,endJulian))
        .filterBounds(sa)
        .map(bust_clouds)
        .select(sensor_band_dict.get('L7'),bandNames)

var L8 = ee.ImageCollection('LC8_L1T_TOA')
        .filterDate(startDate,endDate)
        .filter(ee.Filter.calendarRange(startJulian,endJulian))
        .filterBounds(sa)
        .map(bust_clouds)
        .select(sensor_band_dict.get('L8'),bandNames)

//selected and renamed bands for both collections
var Imagery = ee.ImageCollection(L5.merge(L7).merge(L8));

Imagery = simpleTDOM(Imagery,-1,false)
Imagery = Imagery.map(NDVI)
Imagery = Imagery.map(NDWI)
Imagery = Imagery.map(NDII7)
Imagery = Imagery.map(createTimeBand)

//linear reducer
// Reduce the collection with the linear fit reducer.
// Independent variable are followed by dependent variables.
var linearFit = Imagery.select(['year', 'NDVI'])
  .reduce(ee.Reducer.linearFit());

// Display the results.
//Map.setCenter(-103.0023, 42.8317, 8);
Map.addLayer(linearFit.select(['scale']),
  {min: -0.01, max: 0.01}, 'fit');

//Map Actual vs Predicted
var actualPredicted = Imagery.map(function(img){
  var predicted = img.select(['year']).multiply(linearFit.select('scale')).add(linearFit.select('offset')).select([0],['predictedNDVI']);
  var actual = img.select(['NDVI']).select([0],['actualNDVI']);
  return actual.addBands(predicted)
})
Map.addLayer(actualPredicted);

// var ForestBound = ee.FeatureCollection('ft:1G8Ksi499F13l7SpOTDn2VelzLILW-EDdAx9y2G0C', 'geometry');
// Map.addLayer(ForestBound)

// exportImage(linearFit, "scale",
//       {'maxPixels': 2e9,
//         'crs':  'EPSG:26913',
//         'scale': 30
//       });